export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm; 


/////////////////////////////////////////////////////////////////////////////////////////
// 03/12
router outlet output
https://stackoverflow.com/questions/37662456/angular-2-output-from-router-outlet


/////////////////////////////////////////////////////////////////////////////////////////
// 03/10

HttpClient subscribe 型別轉換
--------------------------------------

this.httpClient.get("url").subscribe(x => {});
如上, get 回傳 observable<object>, 其 x 為 object 型別, 
如何將 x 轉換為指定型別物件？ 如:
export class ChartTimeModel {
    timeTitle = [];
    roomCount = [];
    siteCount = [];
}
=> gpt 魔幻回答 :)

--------------------------------------
英文關鍵字:
httpClient get & Property xx does not exist on type 'Object'

--------------------------------------
https://stackoverflow.com/questions/47202177/angular-4-http-to-httpclient-property-someproperty-does-not-exist-on-type

this.http.get< customer obj> (url)




/////////////////////////////////////////////////////////////////////////////////////////
// 03/04
// 評估另一種方式開啟 綠界 form html
window.open(url);
window.open("https://getecpaysdkpage-querqokzna-uc.a.run.app");

/////////////////////////////////////////////////////////////////////////////////////////
03/01
//=> 使用 httpClient 取得 綠界 html 頁面

  private async fetchPaymentPageHtml(): Promise<string> {
    // 發送 HTTP 請求到綠界 API
    const apiUrl = 'https://getecpayresult-querqokzna-uc.a.run.app';
    this.http
      .get(apiUrl)
      .subscribe(
        x => {
          console.log("success!");
          console.log(x);
          return x;
        },
        error => {
          console.log(" error 2 ! : " + error.error.text);
          this.paymentPageEl.nativeElement.innerHTML = error.error.text;
          
          return error.error.text;          
        }
      );
      return "畫面載入中,請稍等。";

/////////////////////////////////////////////////////////////////////////////////////////
02/27
刷新 html 畫面

html: 
<div #paymentPage></div>

ts:
  @ViewChild('paymentPage') paymentPageEl!: ElementRef;

    // 將 HTML 內容設定給 paymentPageEl
    this.paymentPageEl.nativeElement.innerHTML = paymentPageHtml;
    console.log(document.getElementById('_form_aiochk'));

